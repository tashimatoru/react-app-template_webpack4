(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{336:function(t,e,n){"use strict";var r=n(1),o=n.n(r),c=n(7),i=n(354),u=n(337);function f(t){return(f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function l(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function a(t,e){return(a=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function s(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=y(t);if(e){var o=y(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return p(this,n)}}function p(t,e){return!e||"object"!==f(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function y(t){return(y=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var h=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&a(t,e)}(f,t);var e,n,r,c=s(f);function f(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,f),(e=c.call(this,t)).state={},e}return e=f,(n=[{key:"render",value:function(){var t,e=this;return o.a.createElement(i.a,{href:this.props.href,style:this.props.style,onClick:function(t){e.props.onClick(t),t.ctrlKey||t.altKey||t.shiftKey||e.props.href.match(/^\w+:\/\//)||(t.preventDefault(),e.props.disabled||function(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],o={ctrlKey:null==n?void 0:n.ctrlKey,altKey:null==n?void 0:n.altKey,shiftKey:null==n?void 0:n.shiftKey},c=function(t,e,n){var r,o,c,i,u,f,l=document.body.appendChild(document.createElement("form")),a=navigator.userAgent.toLowerCase(),s=a.indexOf("msie")>=0||a.indexOf("trident")>=0;return r=function(t){return window.screenTop!==t.screenTop&&window.screenLeft!==t.screenLeft},i=function(){l.setAttribute("method","GET"),l.setAttribute("action",t),l.setAttribute("target",e),l.submit(),l.parentNode.removeChild(l)},c=(o=function(){return window.open(t||"",e,n)})(),!s||r(c)?(i(),c.focus(),c):(c.close(),c.closed?(c=o(),i(),c):(f=0,u=setInterval((function(){(c&&c.closed||f++>100)&&(clearInterval(u),o(),i())}),10),null))};o.ctrlKey||o.shiftKey?c(e,"uri".concat(e).concat(Object(u.a)())):(t?t.history.push(e):window.location.href=e,r&&location.reload(!0))}(e.props,e.props.href))},color:this.props.color,underline:this.props.underline},null===(t=this.props)||void 0===t?void 0:t.children)}}])&&l(e.prototype,n),r&&l(e,r),f}(o.a.Component);h.defaultProps={href:"/",onClick:function(){},color:"inherit",underline:"none",disabled:!1,style:{}};e.a=Object(c.f)(h)},351:function(t,e,n){"use strict";n.r(e);var r=n(1),o=n.n(r),c=n(7),i=n(336);function u(t){return(u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function f(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function l(t,e){return(l=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function a(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=p(t);if(e){var o=p(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return s(this,n)}}function s(t,e){return!e||"object"!==u(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function p(t){return(p=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var y=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&l(t,e)}(u,t);var e,n,r,c=a(u);function u(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(e=c.call(this,t)).state={},e}return e=u,(n=[{key:"render",value:function(){return o.a.createElement(o.a.Fragment,null,"Index(main v2)",o.a.createElement("hr",null),o.a.createElement("p",null,o.a.createElement(i.a,{href:"/hoge"},"hoge")),o.a.createElement("p",null,o.a.createElement(i.a,{href:"/search?hoge=fuga"},"search")))}}])&&f(e.prototype,n),r&&f(e,r),u}(o.a.Component);y.defaultProps={},e.default=Object(c.f)(y)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,